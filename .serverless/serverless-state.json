{
  "service": {
    "service": "api",
    "serviceObject": {
      "name": "api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "stage": "dev",
      "memorySize": 128,
      "region": "us-east-1",
      "lambdaHashingVersion": "20201221",
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "versionFunctions": true,
      "environment": {},
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "EndpointsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-endpoints-dev"
            }
          },
          "BasicFunctionsHelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-basic-functions-hello-dev"
            }
          },
          "BasicSchedulesHelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-basic-schedules-hello-dev"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-endpoints-dev:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-basic-functions-hello-dev:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-basic-schedules-hello-dev:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-endpoints-dev:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-basic-functions-hello-dev:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-basic-schedules-hello-dev:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "QueueN",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "EndpointsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api/dev/1620510444831-2021-05-08T21:47:24.831Z/api.zip"
              },
              "Handler": "src/index.endpoints",
              "Runtime": "nodejs12.x",
              "FunctionName": "api-endpoints-dev",
              "MemorySize": 128,
              "Timeout": 30,
              "Environment": {
                "Variables": {}
              },
              "Role": {
                "Fn::GetAtt": [
                  "customRoleLambda",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EndpointsLogGroup",
              "customRoleLambda"
            ]
          },
          "BasicFunctionsHelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api/dev/1620510444831-2021-05-08T21:47:24.831Z/api.zip"
              },
              "Handler": "src/modules/basic/functions/index.hello",
              "Runtime": "nodejs12.x",
              "FunctionName": "api-basic-functions-hello-dev",
              "MemorySize": 128,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "stage": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "ReservedConcurrentExecutions": 10
            },
            "DependsOn": [
              "BasicFunctionsHelloLogGroup"
            ]
          },
          "BasicSchedulesHelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api/dev/1620510444831-2021-05-08T21:47:24.831Z/api.zip"
              },
              "Handler": "src/modules/basic/schedules/index.hello",
              "Runtime": "nodejs12.x",
              "FunctionName": "api-basic-schedules-hello-dev",
              "MemorySize": 128,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "stage": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "ReservedConcurrentExecutions": 1
            },
            "DependsOn": [
              "BasicSchedulesHelloLogGroup"
            ]
          },
          "EndpointsLambdaVersionQPafIkAQkeQmqzDMuzgD6pgRDL799V0r2O3IBlZJso": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EndpointsLambdaFunction"
              },
              "CodeSha256": "7DR+lK9ZHSnQKY7pmfQYcPOy6GQNJs0BWR93fFc213I="
            }
          },
          "BasicFunctionsHelloLambdaVersionxZ1gjIMWuh2Ergwj4gmpG7OTxcOkSIp4j078ILKIWI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BasicFunctionsHelloLambdaFunction"
              },
              "CodeSha256": "7DR+lK9ZHSnQKY7pmfQYcPOy6GQNJs0BWR93fFc213I="
            }
          },
          "BasicSchedulesHelloLambdaVersionqQqCMXTNd25WXz982S7OX0enuAPTQoepGOCbKLXrVDo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BasicSchedulesHelloLambdaFunction"
              },
              "CodeSha256": "7DR+lK9ZHSnQKY7pmfQYcPOy6GQNJs0BWR93fFc213I="
            }
          },
          "BasicSchedulesHelloEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(1 minutes)",
              "State": "ENABLED",
              "Name": "api-basic-schedules-hello-dev",
              "Description": "basicSchedulesHello",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "BasicSchedulesHelloLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "basicSchedulesHelloSchedule"
                }
              ]
            }
          },
          "BasicSchedulesHelloLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "BasicSchedulesHelloLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "BasicSchedulesHelloEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayMethodPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "EndpointsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1620510441229": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPost"
            ]
          },
          "EndpointsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EndpointsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "BasicFunctionsHelloEventSourceMappingSQSQueueN": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 1,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "QueueN",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "BasicFunctionsHelloLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "Topic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "TopicName": "basic-functions-hello-dev"
            }
          },
          "QueueN": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "QueueN"
            }
          },
          "Subscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Fn::GetAtt": [
                  "Topic"
                ]
              },
              "Endpoint": {
                "Fn::GetAtt": [
                  "Queue",
                  "Arn"
                ]
              },
              "Protocol": "sqs"
            }
          },
          "customRoleLambda": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "customRole-dev",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "custom-role-dev",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn:aws:logs",
                              {
                                "Fn::Sub": "${AWS::Region}"
                              },
                              "AKIAVMY5N4YEYU63FBEZ",
                              "log-group:/aws/lambda/*:*:*"
                            ]
                          ]
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ec2:DescribeNetworkInterfaces",
                          "ec2:CreateNetworkInterface",
                          "ec2:DeleteNetworkInterface",
                          "ec2:DescribeInstances",
                          "ec2:AttachNetworkInterface",
                          "lambda:CreateEventSourceMapping",
                          "lambda:ListEventSourceMappings",
                          "lambda:ListFunctions",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes",
                          "sqs:ReceiveMessage"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:PutObject"
                        ],
                        "Resource": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:aws:s3:::",
                              "dlvery-dev",
                              "/*"
                            ]
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "EndpointsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EndpointsLambdaVersionQPafIkAQkeQmqzDMuzgD6pgRDL799V0r2O3IBlZJso"
            },
            "Export": {
              "Name": "sls-api-dev-EndpointsLambdaFunctionQualifiedArn"
            }
          },
          "BasicFunctionsHelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BasicFunctionsHelloLambdaVersionxZ1gjIMWuh2Ergwj4gmpG7OTxcOkSIp4j078ILKIWI"
            },
            "Export": {
              "Name": "sls-api-dev-BasicFunctionsHelloLambdaFunctionQualifiedArn"
            }
          },
          "BasicSchedulesHelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BasicSchedulesHelloLambdaVersionqQqCMXTNd25WXz982S7OX0enuAPTQoepGOCbKLXrVDo"
            },
            "Export": {
              "Name": "sls-api-dev-BasicSchedulesHelloLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-api-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "settings": {
        "region": "#{AWS::Region}",
        "accountId": "AKIAVMY5N4YEYU63FBEZ",
        "stage": "dev",
        "debug": true
      },
      "webpack": {
        "packager": "npm",
        "includeModules": {
          "forceExclude": [
            "aws-sdk",
            "@babel/runtime"
          ]
        }
      }
    },
    "plugins": [
      "serverless-dotenv-plugin",
      "serverless-webpack",
      "serverless-pseudo-parameters",
      "serverless-offline",
      "serverless-offline-scheduler",
      "serverless-offline-sqs"
    ],
    "pluginsData": {},
    "functions": {
      "endpoints": {
        "handler": "src/index.endpoints",
        "memorySize": 128,
        "timeout": 30,
        "name": "api-endpoints-dev",
        "role": "customRoleLambda",
        "events": [
          {
            "http": {
              "path": "",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless/api.zip"
        },
        "memory": 128,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "EndpointsLambdaVersionQPafIkAQkeQmqzDMuzgD6pgRDL799V0r2O3IBlZJso"
      },
      "basicFunctionsHello": {
        "handler": "src/modules/basic/functions/index.hello",
        "name": "api-basic-functions-hello-dev",
        "timeout": 30,
        "reservedConcurrency": 10,
        "environment": {
          "stage": "dev"
        },
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2][\"Resource\"][0]"
              },
              "batchSize": 1,
              "enabled": true
            }
          }
        ],
        "package": {
          "artifact": ".serverless/api.zip"
        },
        "memory": 128,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "BasicFunctionsHelloLambdaVersionxZ1gjIMWuh2Ergwj4gmpG7OTxcOkSIp4j078ILKIWI"
      },
      "basicSchedulesHello": {
        "handler": "src/modules/basic/schedules/index.hello",
        "name": "api-basic-schedules-hello-dev",
        "timeout": 900,
        "reservedConcurrency": 1,
        "environment": {
          "stage": "dev"
        },
        "events": [
          {
            "schedule": {
              "name": "api-basic-schedules-hello-dev",
              "description": "basicSchedulesHello",
              "rate": "rate(1 minutes)",
              "enabled": true
            }
          }
        ],
        "package": {
          "artifact": ".serverless/api.zip"
        },
        "memory": 128,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "BasicSchedulesHelloLambdaVersionqQqCMXTNd25WXz982S7OX0enuAPTQoepGOCbKLXrVDo"
      }
    },
    "resources": {
      "Resources": {
        "Topic": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "TopicName": "basic-functions-hello-dev"
          }
        },
        "QueueN": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "QueueN"
          }
        },
        "Subscription": {
          "Type": "AWS::SNS::Subscription",
          "Properties": {
            "TopicArn": {
              "Fn::GetAtt": [
                "Topic"
              ]
            },
            "Endpoint": {
              "Fn::GetAtt": [
                "Queue",
                "Arn"
              ]
            },
            "Protocol": "sqs"
          }
        },
        "customRoleLambda": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "customRole-dev",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "custom-role-dev",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": {
                        "Fn::Join": [
                          ":",
                          [
                            "arn:aws:logs",
                            "#{AWS::Region}",
                            "AKIAVMY5N4YEYU63FBEZ",
                            "log-group:/aws/lambda/*:*:*"
                          ]
                        ]
                      }
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "ec2:DescribeNetworkInterfaces",
                        "ec2:CreateNetworkInterface",
                        "ec2:DeleteNetworkInterface",
                        "ec2:DescribeInstances",
                        "ec2:AttachNetworkInterface",
                        "lambda:CreateEventSourceMapping",
                        "lambda:ListEventSourceMappings",
                        "lambda:ListFunctions",
                        "sqs:DeleteMessage",
                        "sqs:GetQueueAttributes",
                        "sqs:ReceiveMessage"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject"
                      ],
                      "Resource": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:s3:::",
                            "dlvery-dev",
                            "/*"
                          ]
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "useDotenv": true,
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/api/dev/1620510444831-2021-05-08T21:47:24.831Z",
    "artifact": ""
  }
}